


#include "stm32f4xx.h"

#define GPIOAEN     (1U<<0)  // Enable clock access for GPIO A (making lsb 1)
#define UART2EN 	(1U<<17) // Enable clock access for USART 2

#define SYS_FREQ			16000000 // 16Mhz // Default system clock of STM32
#define APB1_CLK			SYS_FREQ
#define UART_BAUDRATE		115200

static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t PeriphClk, uint32_t BaudRatre );
static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRatre);




int main(void)
{

	while(1)
	{
		}
}

//Creating necessary functions for UART configuration

void uart2_tx_init(void)
	{

	/**************Configure uart tx gpio pin***************/

	/*Enable Clock Access for GPIOA(GPIOA because pins is PA2)*/
	RCC->AHB1ENR |= GPIOAEN;
	/*Set PA2 mode to Alternate Function Mode*/
	GPIOA->MODER &=~(1<<4); // set bit 4 to 0
	GPIOA->MODER |=(1<<5); // set bit 5 to 1
	/*Set PA2 alternate function type to UART_TX (AF7)*/
	GPIOA->AFR[0] |= (1U<<8);// AFRL -> AFR[0], AFRH -> AFR[1], Setting AF7 to AFRL2 (bit 8)
	GPIOA->AFR[0] |= (1U<<9);// Setting AF7 to AFRL2 (bit 9)
	GPIOA->AFR[0] |= (1U<<10); //Setting AF7 to AFRL2 (bit 10)
	GPIOA->AFR[0] &=~ (1U<<11);//Setting AF7 to AFRL2 (bit 11)


	/****************Configure UART module************************/
	/*Enable clock access to uart2*/
	RCC->APB1ENR |= UART2EN ;
	/*Configure baud rate*/
	uart_set_baudrate(USART2, APB1_CLK, 115200);

	/*Configure the transfer direction*/

	/*Enable uart2 module*/




	}


/*Function for Computing Baud Rate*/


static void uart_set_baudrate(USART_TypeDef *USARTx,uint32_t PeriphClk, uint32_t BaudRatre )
{

USARTx->BRR = compute_uart_bd(PeriphClk, BaudRatre);


}


static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRatre)
{
	return (( PeriphClk + (BaudRatre/2U))/BaudRatre);
	}

